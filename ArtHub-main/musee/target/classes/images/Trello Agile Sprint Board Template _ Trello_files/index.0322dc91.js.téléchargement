function e(e,t,r,l){Object.defineProperty(e,t,{get:r,set:l,enumerable:!0,configurable:!0})}function t(e){return e&&e.__esModule?e.default:e}var r=globalThis,l={},o={},i=r.parcelRequiree178;null==i&&((i=function(e){if(e in l)return l[e].exports;if(e in o){var t=o[e];delete o[e];var r={id:e,exports:{}};return l[e]=r,t.call(r.exports,r,r.exports),r.exports}var i=Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,t){o[e]=t},r.parcelRequiree178=i);var s=i.register;s("5H6Fu",function(e,t){let r=["http://localhost:2999/","http://localhost:3002/"];e.exports={getTargetOrigin:()=>{var e;return r.includes(null===(e=document)||void 0===e?void 0:e.referrer)?document.referrer:"https://trello.com".toString()}}}),s("6bEHL",function(t,r){e(t.exports,"GitHubURL",()=>c);var l=i("6ZcWT");let o=(e,t)=>{let r;try{r=localStorage.getItem(`${t}-endpoint`)}catch(e){}return r&&r!==l.PUBLIC_API_ENDPOINT?0===e.indexOf(r.slice(0,-6)):(0,l.GITHUB_PREFIX).test(e)},s=e=>{if(!e.startsWith("https://gist.github.com/"))return!1;try{let t=new URL(e).pathname.substring(1).split("/");if(2!==t.length)return!1;let r=t[1];if(!/^[a-f0-9]+$/.test(r))return!1}catch(e){return!1}return!0},n=e=>{let t=/.*?\/.*?\/tree\/([^?]+)/;if(t.test(e.replace(l.GITHUB_PREFIX,""))){let r=t.exec(e.replace(l.GITHUB_PREFIX,""));return encodeURIComponent((null==r?void 0:r.length)&&r[1]||"")}return null},a=(e,t)=>{let r,i;let a={url:e};if(s(e)){a.isGist=!0;let t=new URL(e).pathname.substring(1).split("/");return a.idGist=t.length?t[1]:"",a}try{r=localStorage.getItem(`${t}-endpoint`)}catch(e){}if(!o(e,t))return a;a.isGitHubURL=!0;let[c="",u=""]=i=r&&r!==l.PUBLIC_API_ENDPOINT?e.replace(r.slice(0,-6),"").split("/"):e.replace(l.GITHUB_PREFIX,"").split("/");if(a.owner=c,1===i.length)return a.isUser=!0,a;if(a.repo=u,!i[2])return a.isRepo=!0,a;switch(i[2]){case"pull":if(i.length>=6&&"commits"===i[4]){a.hash=i[5]||"",a.isCommit=/^[0-9a-f]+$/.test(a.hash);break}a.number=parseInt(i[3]||"",10),a.isPull=a.number>0;break;case"issues":a.number=parseInt(i[3]||"",10),a.isIssue=a.number>0;break;case"commit":a.hash=i[3]||"",a.isCommit=/^[0-9a-f]+$/.test(a.hash);break;case"tree":a.branch=n(e)||"",a.isBranch=null!=a.branch&&a.branch.length>0;break;case"blob":a.isFile=!0,a.filePath=i.slice(4)}return a},c={isGist:s,isGitHub:o,parse:a,isBranch:(e,t)=>a(e,t).isBranch,isIssue:(e,t)=>a(e,t).isIssue,isCommit:(e,t)=>a(e,t).isCommit,isPull:(e,t)=>a(e,t).isPull,isRepo:(e,t)=>a(e,t).isRepo}}),s("fs6jf",function(t,r){e(t.exports,"getRepos",()=>n);var l=i("bmTYO"),o=i("fwAGy");let{Promise:s}=window.TrelloPowerUp,n=(e,t)=>s.try(()=>t&&t.repo?[t.repo]:e.get("board","shared","repos",[])).map(t=>(0,l.API).getRepo(e,t.owner.login,t.name).catch(o.GitHubError,()=>null)).filter(e=>null!==e).then(e=>e)}),s("36jm1",function(e,t){e.exports=function(){for(var e={},t=0;t<arguments.length;t++){var l=arguments[t];for(var o in l)r.call(l,o)&&(e[o]=l[o])}return e};var r=Object.prototype.hasOwnProperty}),s("lJBJt",function(r,l){e(r.exports,"handleErrors",()=>h),e(r.exports,"chooseRepo",()=>f),e(r.exports,"addChooseOther",()=>p),e(r.exports,"getRepoItems",()=>b);var o=i("36jm1"),s=i("bmTYO"),n=i("fs6jf"),a=i("fwAGy");let{Promise:c}=window.TrelloPowerUp,u=(e,t)=>new c(r=>e.popup({title:e.localizeKey("authorize"),url:"authorize.html",callback:e=>t(e).then(r),height:140})),h=(e,t)=>{let r=e=>t(e).catch(a.GitHubError,t=>{if(t instanceof a.GitHubError.Unauthorized)return u(e,r);if(t instanceof a.GitHubError.InvalidRepo)return f(e,r);if(t instanceof a.GitHubError.InvalidBranch)return _(e,r);throw t});return r(e)},p=(e,t,r,l)=>{r.chooseBranch&&t.push({text:e.localizeKey("choose_a_different_branch_ellipsis"),callback:e=>_(e,l),alwaysVisible:!0}),r.chooseRepo&&t.push({text:e.localizeKey("choose_a_different_repo_ellipsis"),callback:e=>d(e,l),alwaysVisible:!0})},m=(e,t,r,l)=>h(e,e=>r.getList(e,l).then(l=>new c(o=>{let i=l.map(e=>({text:e.displayName||e.name,callback:l=>c.try(()=>r.set(e)).then(e=>t(l,e)).then(o)}));return p(e,i,r,(e,l)=>m(e,t,r,l)),e.popup({items:i,title:r.title,search:r.search})}))),d=(e,t)=>m(e,t,{getList:e=>(0,s.API).getAllReposSorted(e).map(e=>({repo:e,name:e.full_name})),set:e=>({repo:{full_name:e.repo.full_name,name:e.repo.name,owner:{login:e.repo.owner.login,type:e.repo.owner.type}}}),title:e.localizeKey("choose_a_repo_ellipsis"),search:{count:10,placeholder:e.localizeKey("search_for_repo_ellipsis"),empty:e.localizeKey("no_repos_found")}}),g=(e,t)=>1===t.length&&e===t[0]?null:t.some(t=>t.owner.login!==e.owner.login)?e.full_name:e.name,b=(e,t,r)=>(0,n.getRepos)(e,r).then(e=>{if(0===e.length)throw new a.GitHubError.InvalidRepo;return c.map(e,r=>c.props({items:t(r),prefix:g(r,e),repo:r}))}).then(e=>Array.prototype.concat.apply([],e.map(e=>e.items.map(t=>({item:t,prefix:e.prefix,repo:e.repo}))))),f=(e,t)=>m(e,t,{getList:e=>(0,s.API).getAllReposSorted(e).map(e=>({name:e.full_name,repo:e})),set:t=>{let r={full_name:t.repo.full_name,name:t.repo.name,owner:{login:t.repo.owner.login,type:t.repo.owner.type}};return e.get("board","shared","repos",[]).then(t=>{if(t.some(e=>e.name===r.name&&e.owner.login===r.owner.login))return null;let l=t.slice();return l.push(r),e.set("board","shared","repos",l)})},title:e.localizeKey("choose_a_repo_ellipsis"),search:{count:10,placeholder:e.localizeKey("search_for_repo_ellipsis"),empty:e.localizeKey("no_repos_found")}}),_=(e,r)=>m(e,r,{getList:(e,r)=>b(e,t=>(0,s.API).getAllBranches(e,t),r).map(e=>t(o)(e,{displayName:(e.prefix?`${e.prefix} `:"")+e.item.name})),nameAttr:"displayName",set:t=>{let r={name:t.item.name,repo:{name:t.repo.name,owner:{login:t.repo.owner.login,type:t.repo.owner.type}}};return e.set("board","private","branch",r).then(()=>({branch:r}))},title:e.localizeKey("choose_a_branch_ellipsis"),search:{count:10,placeholder:e.localizeKey("search_for_branch_ellipsis"),empty:e.localizeKey("no_branches_found")},chooseRepo:!0})}),s("l4G1S",function(e,t){e.exports={defaultLocale:"en",supportedLocales:["cs","de","en","es","fi","fr","hu","it","ja","nb","nl","pl","pt-BR","ru","sv","th","tr","uk","vi","zh-Hans","zh-Hant"],resourceUrl:"./strings/61cc201b504c/{locale}.json"}});var n=i("5H6Fu"),a=(i("bmTYO"),i("bmTYO")),c=i("6bEHL"),u=i("eHhkT");const{Promise:h}=window.TrelloPowerUp,p=(e,t)=>h.try(()=>{let r=e.getContext().board,l=(0,c.GitHubURL).parse(t,r);if(!l.isGitHubURL)throw e.NotHandled("not a github url");return l.isUser?(0,a.API).getUser(e,l.owner).then(({name:e,type:t,avatar_url:r})=>({isUser:!0,title:e,type:t,avatar:r})):l.isPull||l.isIssue?h.try(()=>l.isPull?(0,a.API).getPull(e,l.owner,l.repo,l.number):(0,a.API).getIssue(e,l.owner,l.repo,l.number)).then(e=>({...l.isPull?{isPull:!0}:{isIssue:!0},number:e.number,url:t,title:e.title,created:Date.parse(e.created_at),createdBy:e.user.login,modified:Date.parse(e.updated_at)})):l.isCommit?(0,a.API).getCommit(e,l.owner,l.repo,l.hash).then(e=>{let{commit:r}=e;return{author:r.author.name,isCommit:!0,hash:l.hash,url:t,title:(0,u.Util).firstLine(r.message),desc:(0,u.Util).afterFirstLine(r.message),created:Date.parse(r.committer.date),createdBy:r.committer.name}}):l.isRepo?(0,a.API).getRepo(e,l.owner,l.repo).then(e=>({isRepo:!0,url:t,title:e.full_name,desc:e.description,created:Date.parse(e.created_at),modified:Date.parse(e.updated_at)})):l.isBranch?(0,a.API).getBranch(e,l.owner,l.repo,l.branch).then(e=>({isBranch:!0,url:t,title:l.branch,updatedBy:e.commit.author.login})):l.isFile?(0,a.API).getFile(e,l.owner,l.repo,l.filePath).then(e=>({isFile:!0,title:e.name,size:e.size,downloadUrl:e.download_url})):{url:t,title:t}});var m=i("fs6jf"),d=i("36jm1"),a=i("bmTYO"),g=i("lJBJt"),m=i("fs6jf"),b=i("fwAGy"),u=i("eHhkT");const{Promise:f}=window.TrelloPowerUp,{relativeUrl:_}=window.TrelloPowerUp.util,y=e=>t=>f.all([t.attach({url:e.url,name:e.text}).catch(t=>{window.Sentry.withScope(r=>{r.setExtra("urlLength",e.url&&e.url.length),r.setExtra("nameLength",e.text&&e.text.length),window.Sentry.captureException(t)})}),t.card("name","url").then(r=>t.get("board","shared","disableComments").then(l=>e.commentsUrl&&!l?(0,a.API).post(t,e.commentsUrl,{body:`![](${_("images/mini-trello-icon.png")}) [${r.name}](${r.url})`}):null))]).then(()=>t.closePopup()),w=(e,r)=>(l,o)=>(0,g.handleErrors)(l,l=>(0,m.getRepos)(l).then(i=>{let s=i;if(o&&o.repo&&(s=[o.repo]),!s||0===s.length)throw new b.GitHubError.InvalidRepo;return l.popup({title:r.getTitle(o)||l.localizeKey("github"),items:(l,o)=>e(l,s,o.search).then(o=>{let i=o.map(e=>t(d)(e,{callback:y(e)}));return(0,g.addChooseOther)(l,i,r,w(e,r)),i}),search:r.search})})),x=(e,r)=>(l,o)=>(0,g.handleErrors)(l,i=>e(i,o).then(s=>{let n=s.map(e=>t(d)(e,{callback:y(e)}));return(0,g.addChooseOther)(i,n,r,x(e,r)),i.popup({title:r.getTitle(o)||l.localizeKey("github"),items:n,search:r.search})})),z=(e,t,r)=>{let l=t.map(e=>e.full_name);return(0,a.API).searchPullRequests(e,l,r,12).then(e=>e.map(e=>{t.length>1&&(e.prefix=e.repository_url.substring(e.repository_url.lastIndexOf("/")+1));let r=e.prefix?`${e.prefix} `:"";return{url:e.html_url,text:`${r}#${e.number} ${e.title}`,commentsUrl:e.comments_url}}))},P=e=>e.get("board","private","branch",null).then(t=>{if(!t)throw new b.GitHubError.InvalidBranch;return(0,a.API).getRepo(e,t.repo.owner.login,t.repo.name).then(r=>(0,a.API).getAllCommits(e,r,t.name)).map(e=>({url:e.html_url,text:(0,u.Util).firstLine(e.commit.message),commentsUrl:e.comments_url})).catch(b.GitHubError.NotFound,()=>{throw new b.GitHubError.InvalidBranch})}),I=(e,t,r)=>{let l=t.map(e=>e.full_name);return(0,a.API).searchIssues(e,l,r,12).then(e=>e.map(e=>{t.length>1&&(e.prefix=e.repository_url.substring(e.repository_url.lastIndexOf("/")+1));let r=e.prefix?`${e.prefix} `:"";return{url:e.html_url,text:`${r}#${e.number} ${e.title}`,commentsUrl:e.comments_url}}))},U=(e,t)=>(0,g.getRepoItems)(e,t=>(0,a.API).getAllBranches(e,t),t).then(e=>e.map(e=>({url:`${e.repo.html_url}/tree/${e.item.name}`,text:e.item.name}))),H=e=>e.popup({title:e.localizeKey("github"),items:[{text:e.localizeKey("attach_branch_ellipsis"),callback:x(U,{getTitle:t=>t&&t.repo?e.localizeKey("branches_from_owner_repo",{owner:t.repo.owner.login,repo:t.repo.name}):e.localizeKey("branches"),chooseRepo:!0,search:{count:10,placeholder:e.localizeKey("search_branches_ellipsis"),empty:e.localizeKey("no_branches_found")}})},{text:e.localizeKey("attach_commit_ellipsis"),callback:x(P,{getTitle:t=>t&&t.branch?e.localizeKey("commits_from_branch",{branch:t.branch.name}):e.localizeKey("commits"),chooseBranch:!0,search:{count:10,placeholder:e.localizeKey("search_commits_ellipsis"),empty:e.localizeKey("no_commits_found")}})},{text:e.localizeKey("attach_issue_ellipsis"),callback:w(I,{getTitle:t=>t&&t.repo?e.localizeKey("issues_from_owner_repo",{owner:t.repo.owner.login,repo:t.repo.name}):e.localizeKey("issues"),chooseRepo:!0,search:{placeholder:e.localizeKey("search_issues_ellipsis"),empty:e.localizeKey("no_issues_found"),searching:e.localizeKey("searching_issues_ellipsis")}})},{text:e.localizeKey("attach_pull_request_ellipsis"),callback:w(z,{getTitle:t=>t&&t.repo?e.localizeKey("pull_requests_from_owner_repo",{owner:t.repo.owner.login,repo:t.repo.name}):e.localizeKey("pull_requests"),chooseRepo:!0,search:{placeholder:e.localizeKey("search_pull_requests_ellipsis"),empty:e.localizeKey("no_pull_requests_found"),searching:e.localizeKey("searching_pull_requests_ellipsis")}})}]});var K=i("l4G1S"),c=i("6bEHL"),a=i("bmTYO");const{Promise:R}=window.TrelloPowerUp,v=(e,t)=>R.try(()=>{let r=e.getContext().board,l=(0,c.GitHubURL).parse(t,r);if(!l.isPull)throw Error("not a pull request");try{let e=sessionStorage.getItem(t),r=JSON.parse(e||"");if(e&&r&&("closed"===r.state||r.merged))return r}catch(e){}return(0,a.API).getPull(e,l.owner,l.repo,l.number)}).then(r=>{let l={closed:"closed"===r.state,merged:r.merged,pass:0,fail:0,pending:0,checks:0},[o="",i=""]=r.base.repo.full_name.split("/");if(l.closed||l.merged){if(r.url)try{sessionStorage.setItem(t,JSON.stringify({state:r.state,merged:r.merged,base:{repo:{id:r.base.repo.id,name:r.base.repo.name,full_name:r.base.repo.full_name}},head:{ref:r.head.ref,sha:r.head.sha}}))}catch(e){}return l}return(0,a.API).getUnifiedStatus(e,o,i,r.head.sha).then(e=>{e.count>0&&(l.checks+=e.count,l.pass+=e.totalSuccess,l.fail+=e.count-e.totalSuccess)}).then(()=>l)}),G=(e,t)=>R.map(t,t=>v(e,t)).then(e=>{let t={pass:0,fail:0,pending:0,checks:0,closed:0,merged:0,count:0};return e.forEach(e=>{t.pass+=e.pass,t.fail+=e.fail,t.pending+=e.pending,t.checks+=e.checks,t.closed+=+e.closed,t.merged+=+e.merged,t.count+=1}),t});var u=i("eHhkT"),b=i("fwAGy"),c=i("6bEHL");const{Promise:E}=window.TrelloPowerUp,T="./images/icon.svg",A="./images/pull-request.svg";let L=0;window.TrelloPowerUp.initialize({"attachment-sections":(e,t)=>{let r=t.entries.filter(e=>(0,c.GitHubURL).isGist(e.url));return(0,a.API).getEndpoint(e).then(()=>{let l=e.getContext().board,{entries:o}=t,i=[{title:e.localizeKey("github_pull_requests"),test:(0,c.GitHubURL).isPull,url:"./pull-requests.html",height:72},{title:e.localizeKey("github_issues"),test:(0,c.GitHubURL).isIssue,url:"./issues.html",height:64},{title:e.localizeKey("github_commits"),test:(0,c.GitHubURL).isCommit,url:"./commits.html",height:45},{title:e.localizeKey("github_branches"),test:(0,c.GitHubURL).isBranch,url:"./branches.html",height:64}].map(t=>{let r=o.filter(e=>t.test(e.url,l));return{claimed:r,icon:T,title:t.title,content:{type:"iframe",url:e.signUrl(t.url),height:t.height?r.length*t.height:void 0}}}).filter(e=>e.claimed.length>0);return r.length>0&&(i=i.concat(r.map(t=>({id:t.id,title:e=>(0,a.API).getGist(e,(0,c.GitHubURL).parse(t.url,"").idGist).then(e=>{var t;return null!==(t=Object.keys(e.files)[0])&&void 0!==t?t:"Gist"}).catch(e=>(console.warn(e),"Gist")),claimed:[t],icon:T,content:{type:"iframe",url:e.signUrl(`./gist${new URL(t.url).pathname}`),height:200}})))),i})},"attachment-thumbnail":(e,t)=>p(e,t.url).then(e=>{var r;return{image:{url:T,logo:!0},title:null!==(r=e.title)&&void 0!==r?r:t.url}}).catch(b.GitHubError,()=>{throw e.NotHandled()}),"board-buttons":e=>{let t=[];return(0,a.API).getEndpoint(e),(0,m.getRepos)(e).then(r=>{if(0===r.length)return t;if(1===r.length){var l,o;return[{icon:T,text:null===(l=r[0])||void 0===l?void 0:l.name,url:null===(o=r[0])||void 0===o?void 0:o.html_url}]}return[{icon:T,text:[r.length,"repos"].join(" "),callback:t=>t.popup({title:e.localizeKey("repos"),items:r.map(e=>({text:e.full_name,url:e.html_url}))})}]}).catch(b.GitHubError,()=>t)},"card-badges":(e,t)=>{let r=t.attachments.map(e=>e.url),l=[],o=e.getContext().board,i=r.filter(e=>(0,c.GitHubURL).isGitHub(e,o));if(!(i.length>0))return[];l.push({text:String(i.length),icon:T});let s=r.filter(e=>(0,c.GitHubURL).isPull(e,o));return 0===s.length||l.push({dynamic:()=>L>100?{refresh:10,icon:A,text:e.localizeKey("loading_ellipsis")}:(L+=1,G(e,s).timeout(4e3).then(t=>{if(L-=1,t.closed===t.count){let r=t.merged===t.count?e.localizeKey("merged"):e.localizeKey("closed");return{text:`${t.count} ${r}`,icon:A}}return t.checks>0?{text:[t.pass,t.checks].join("/"),icon:A,color:(0,u.Util).statColor(t),refresh:(0,u.Util).statRefresh(t)}:{text:t.count.toString(),icon:A,refresh:300}}).catch(b.GitHubError,()=>{throw L-=1,e.NotHandled()}).catch(E.TimeoutError,()=>(L-=1,{refresh:10,icon:A,text:"1"})))}),l},"card-buttons":e=>e.memberCanWriteToModel("card")?[{icon:T,text:e.localizeKey("github"),callback:H}]:[],"card-detail-badges":e=>(0,a.API).getEndpoint(e).then(()=>e.card("attachments")).then(t=>{let r=e.getContext().board,l=t.attachments.map(e=>e.url).filter(e=>(0,c.GitHubURL).isPull(e,r));return 0===l.length?[]:[{dynamic:()=>G(e,l).then(t=>{if(!(t.closed!==t.count&&t.checks>0))throw e.NotHandled("no card detail badge necessary");return[{title:e.localizeKey("github_checks"),text:`${t.pass}/${t.checks} OK`,icon:T,color:(0,u.Util).statColor(t),refresh:(0,u.Util).statRefresh(t)}]}).catch(b.GitHubError,()=>{throw e.NotHandled()})}]}),"card-from-url":(e,t)=>p(e,t.url).then(e=>({name:e.title,desc:e.desc})).catch(b.GitHubError,()=>{throw e.NotHandled()}),"format-url":(e,t)=>p(e,t.url).then(t=>{let r={icon:T,text:t.title||""};if(t.isPull)r.subtext=e.localizeKey("pull_request_opened_by_user",{number:t.number||"",user:t.createdBy||""});else if(t.isIssue)r.subtext=e.localizeKey("issue_opened_by_user",{number:t.number||"",user:t.createdBy||""});else if(t.isCommit){var l;r.subtext=e.localizeKey("commit_by_user",{hash:(null===(l=t.hash)||void 0===l?void 0:l.slice(0,7))||"",user:t.author||""})}else t.isRepo?r.subtext=t.desc||"":t.isBranch?r.subtext=e.localizeKey("branch_updated_by_user",{user:t.updatedBy||""}):t.isUser?(r.subtext=t.type||"",r.thumbnail=t.avatar||""):t.isFile&&(r.subtext=(null==t?void 0:t.size)?(0,u.Util).formatBytesToString(t.size):"",t.downloadUrl&&(0,u.Util).hasFileImageExtension(t.downloadUrl)&&(r.thumbnail=t.downloadUrl));return r}).catch(b.GitHubError,()=>{throw e.NotHandled()}),"show-settings":e=>e.popup({title:e.localizeKey("github_settings"),url:"settings.html",height:160}),"authorization-status":e=>(0,a.API).getToken(e).then(e=>({authorized:null!=e})).catch(()=>({authorized:!1})),"show-authorization":e=>e.popup({title:e.localizeKey("authorize"),url:"authorize.html",height:140})},{localization:t(K),Sentry:window.Sentry,targetOrigin:(0,n.getTargetOrigin)()});
//# sourceMappingURL=index.0322dc91.js.map
